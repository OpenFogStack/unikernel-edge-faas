<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="374.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="357" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="357" > </text>
<g id="frames">
<g >
<title>perf_ctx_disable (76,995 samples, 1.01%)</title><rect x="462.8" y="85" width="11.9" height="15.0" fill="rgb(216,37,53)" rx="2" ry="2" />
<text  x="465.81" y="95.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (80,670 samples, 1.06%)</title><rect x="336.5" y="53" width="12.5" height="15.0" fill="rgb(227,115,47)" rx="2" ry="2" />
<text  x="339.49" y="63.5" ></text>
</g>
<g >
<title>restart_apic_timer (76,995 samples, 1.01%)</title><rect x="926.6" y="117" width="11.9" height="15.0" fill="rgb(205,218,16)" rx="2" ry="2" />
<text  x="929.60" y="127.5" ></text>
</g>
<g >
<title>all (7,625,272 samples, 100%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(210,121,25)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>vcpu_run (6,658,736 samples, 87.32%)</title><rect x="21.9" y="197" width="1030.4" height="15.0" fill="rgb(237,224,4)" rx="2" ry="2" />
<text  x="24.91" y="207.5" >vcpu_run</text>
</g>
<g >
<title>kvm_apic_accept_pic_intr (175,288 samples, 2.30%)</title><rect x="243.2" y="69" width="27.1" height="15.0" fill="rgb(205,90,24)" rx="2" ry="2" />
<text  x="246.20" y="79.5" >k..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,735,731 samples, 88.33%)</title><rect x="10.0" y="277" width="1042.3" height="15.0" fill="rgb(230,108,22)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>x86_pmu_enable (80,670 samples, 1.06%)</title><rect x="336.5" y="69" width="12.5" height="15.0" fill="rgb(253,90,49)" rx="2" ry="2" />
<text  x="339.49" y="79.5" ></text>
</g>
<g >
<title>add_atomic_switch_msr.constprop.0 (164,639 samples, 2.16%)</title><rect x="901.1" y="149" width="25.5" height="15.0" fill="rgb(226,142,36)" rx="2" ry="2" />
<text  x="904.13" y="159.5" >a..</text>
</g>
<g >
<title>native_write_msr (80,670 samples, 1.06%)</title><rect x="336.5" y="37" width="12.5" height="15.0" fill="rgb(251,209,54)" rx="2" ry="2" />
<text  x="339.49" y="47.5" ></text>
</g>
<g >
<title>skip_emulated_instruction (87,644 samples, 1.15%)</title><rect x="748.3" y="101" width="13.5" height="15.0" fill="rgb(248,224,54)" rx="2" ry="2" />
<text  x="751.26" y="111.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (76,995 samples, 1.01%)</title><rect x="96.7" y="101" width="11.9" height="15.0" fill="rgb(207,187,39)" rx="2" ry="2" />
<text  x="99.70" y="111.5" ></text>
</g>
<g >
<title>kvm_arch_sched_in (10,726 samples, 0.14%)</title><rect x="349.0" y="101" width="1.6" height="15.0" fill="rgb(250,193,0)" rx="2" ry="2" />
<text  x="351.97" y="111.5" ></text>
</g>
<g >
<title>kvm_set_lapic_tscdeadline_msr (76,995 samples, 1.01%)</title><rect x="926.6" y="133" width="11.9" height="15.0" fill="rgb(219,19,4)" rx="2" ry="2" />
<text  x="929.60" y="143.5" ></text>
</g>
<g >
<title>perf_ctx_enable (80,670 samples, 1.06%)</title><rect x="336.5" y="85" width="12.5" height="15.0" fill="rgb(235,42,16)" rx="2" ry="2" />
<text  x="339.49" y="95.5" ></text>
</g>
<g >
<title>kvm_apic_local_deliver (318,629 samples, 4.18%)</title><rect x="47.4" y="149" width="49.3" height="15.0" fill="rgb(254,28,30)" rx="2" ry="2" />
<text  x="50.39" y="159.5" >kvm_..</text>
</g>
<g >
<title>kvm_x2apic_msr_write (164,639 samples, 2.16%)</title><rect x="773.7" y="69" width="25.5" height="15.0" fill="rgb(244,97,38)" rx="2" ry="2" />
<text  x="776.74" y="79.5" >k..</text>
</g>
<g >
<title>kvm_arch_vcpu_load (164,639 samples, 2.16%)</title><rect x="388.0" y="85" width="25.5" height="15.0" fill="rgb(227,15,24)" rx="2" ry="2" />
<text  x="391.02" y="95.5" >k..</text>
</g>
<g >
<title>finish_task_switch.isra.0 (574,664 samples, 7.54%)</title><rect x="336.5" y="117" width="88.9" height="15.0" fill="rgb(222,58,2)" rx="2" ry="2" />
<text  x="339.49" y="127.5" >finish_tas..</text>
</g>
<g >
<title>schedule (76,995 samples, 1.01%)</title><rect x="563.1" y="165" width="11.9" height="15.0" fill="rgb(215,95,9)" rx="2" ry="2" />
<text  x="566.07" y="175.5" ></text>
</g>
<g >
<title>kvm_vcpu_has_events (252,283 samples, 3.31%)</title><rect x="231.3" y="117" width="39.0" height="15.0" fill="rgb(220,203,50)" rx="2" ry="2" />
<text  x="234.28" y="127.5" >kvm..</text>
</g>
<g >
<title>kvm_load_host_xsave_state (76,995 samples, 1.01%)</title><rect x="950.4" y="149" width="11.9" height="15.0" fill="rgb(250,35,51)" rx="2" ry="2" />
<text  x="953.43" y="159.5" ></text>
</g>
<g >
<title>kvm_service_local_tlb_flush_requests (252,283 samples, 3.31%)</title><rect x="108.6" y="181" width="39.1" height="15.0" fill="rgb(217,86,42)" rx="2" ry="2" />
<text  x="111.61" y="191.5" >kvm..</text>
</g>
<g >
<title>kvm_vcpu_halt (2,761,457 samples, 36.21%)</title><rect x="147.7" y="181" width="427.3" height="15.0" fill="rgb(233,23,16)" rx="2" ry="2" />
<text  x="150.66" y="191.5" >kvm_vcpu_halt</text>
</g>
<g >
<title>kvm_sched_in (406,273 samples, 5.33%)</title><rect x="362.5" y="101" width="62.9" height="15.0" fill="rgb(237,212,54)" rx="2" ry="2" />
<text  x="365.55" y="111.5" >kvm_sc..</text>
</g>
<g >
<title>hrtimer_start_range_ns (76,995 samples, 1.01%)</title><rect x="96.7" y="133" width="11.9" height="15.0" fill="rgb(249,39,22)" rx="2" ry="2" />
<text  x="99.70" y="143.5" ></text>
</g>
<g >
<title>kvm_lapic_find_highest_irr (87,644 samples, 1.15%)</title><rect x="661.7" y="117" width="13.5" height="15.0" fill="rgb(247,179,21)" rx="2" ry="2" />
<text  x="664.69" y="127.5" ></text>
</g>
<g >
<title>__schedule (1,804,132 samples, 23.66%)</title><rect x="283.9" y="133" width="279.2" height="15.0" fill="rgb(233,151,17)" rx="2" ry="2" />
<text  x="286.89" y="143.5" >__schedule</text>
</g>
<g >
<title>handle_fastpath_set_msr_irqoff (153,990 samples, 2.02%)</title><rect x="926.6" y="149" width="23.8" height="15.0" fill="rgb(227,96,12)" rx="2" ry="2" />
<text  x="929.60" y="159.5" >h..</text>
</g>
<g >
<title>kvm_apic_has_interrupt (76,995 samples, 1.01%)</title><rect x="231.3" y="85" width="11.9" height="15.0" fill="rgb(237,205,36)" rx="2" ry="2" />
<text  x="234.28" y="95.5" ></text>
</g>
<g >
<title>kvm_lapic_switch_to_hv_timer (76,995 samples, 1.01%)</title><rect x="10.0" y="197" width="11.9" height="15.0" fill="rgb(240,100,26)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>kvm_arch_sched_in (164,639 samples, 2.16%)</title><rect x="362.5" y="85" width="25.5" height="15.0" fill="rgb(250,193,0)" rx="2" ry="2" />
<text  x="365.55" y="95.5" >k..</text>
</g>
<g >
<title>__srcu_read_lock (175,288 samples, 2.30%)</title><rect x="204.2" y="133" width="27.1" height="15.0" fill="rgb(241,170,15)" rx="2" ry="2" />
<text  x="207.16" y="143.5" >_..</text>
</g>
<g >
<title>vmx_update_emulated_instruction (76,995 samples, 1.01%)</title><rect x="938.5" y="117" width="11.9" height="15.0" fill="rgb(222,178,53)" rx="2" ry="2" />
<text  x="941.52" y="127.5" ></text>
</g>
<g >
<title>__vmx_vcpu_run_flags (87,644 samples, 1.15%)</title><rect x="887.6" y="149" width="13.5" height="15.0" fill="rgb(220,6,13)" rx="2" ry="2" />
<text  x="890.56" y="159.5" ></text>
</g>
<g >
<title>vmx_vcpu_load_vmcs (76,995 samples, 1.01%)</title><rect x="388.0" y="69" width="11.9" height="15.0" fill="rgb(209,135,1)" rx="2" ry="2" />
<text  x="391.02" y="79.5" ></text>
</g>
<g >
<title>kvm_vcpu_check_block (515,215 samples, 6.76%)</title><rect x="204.2" y="149" width="79.7" height="15.0" fill="rgb(228,76,48)" rx="2" ry="2" />
<text  x="207.16" y="159.5" >kvm_vcpu_..</text>
</g>
<g >
<title>kvm_cpu_has_pending_timer (87,644 samples, 1.15%)</title><rect x="190.6" y="149" width="13.6" height="15.0" fill="rgb(224,138,18)" rx="2" ry="2" />
<text  x="193.59" y="159.5" ></text>
</g>
<g >
<title>user_return_notifier_register (76,995 samples, 1.01%)</title><rect x="850.2" y="149" width="11.9" height="15.0" fill="rgb(251,106,19)" rx="2" ry="2" />
<text  x="853.17" y="159.5" ></text>
</g>
<g >
<title>kvm_vcpu_ioctl (6,735,731 samples, 88.33%)</title><rect x="10.0" y="229" width="1042.3" height="15.0" fill="rgb(254,192,7)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >kvm_vcpu_ioctl</text>
</g>
<g >
<title>pick_next_task (241,634 samples, 3.17%)</title><rect x="425.4" y="117" width="37.4" height="15.0" fill="rgb(230,65,28)" rx="2" ry="2" />
<text  x="428.42" y="127.5" >pic..</text>
</g>
<g >
<title>kvm_lapic_find_highest_irr (76,995 samples, 1.01%)</title><rect x="675.2" y="165" width="12.0" height="15.0" fill="rgb(247,179,21)" rx="2" ry="2" />
<text  x="678.25" y="175.5" ></text>
</g>
<g >
<title>__apic_accept_irq (318,629 samples, 4.18%)</title><rect x="47.4" y="133" width="49.3" height="15.0" fill="rgb(234,92,25)" rx="2" ry="2" />
<text  x="50.39" y="143.5" >__ap..</text>
</g>
<g >
<title>vmx_vcpu_run (1,075,478 samples, 14.10%)</title><rect x="862.1" y="165" width="166.4" height="15.0" fill="rgb(209,222,16)" rx="2" ry="2" />
<text  x="865.09" y="175.5" >vmx_vcpu_run</text>
</g>
<g >
<title>vmx_vcpu_pi_load (87,644 samples, 1.15%)</title><rect x="399.9" y="69" width="13.6" height="15.0" fill="rgb(220,37,3)" rx="2" ry="2" />
<text  x="402.94" y="79.5" ></text>
</g>
<g >
<title>kvm_lapic_reg_write (76,995 samples, 1.01%)</title><rect x="787.3" y="53" width="11.9" height="15.0" fill="rgb(244,79,6)" rx="2" ry="2" />
<text  x="790.30" y="63.5" ></text>
</g>
<g >
<title>vmx_vmexit (252,283 samples, 3.31%)</title><rect x="1151.0" y="277" width="39.0" height="15.0" fill="rgb(234,149,33)" rx="2" ry="2" />
<text  x="1153.96" y="287.5" >vmx..</text>
</g>
<g >
<title>vmx_spec_ctrl_restore_host (637,258 samples, 8.36%)</title><rect x="1052.3" y="277" width="98.7" height="15.0" fill="rgb(209,101,20)" rx="2" ry="2" />
<text  x="1055.34" y="287.5" >vmx_spec_ct..</text>
</g>
<g >
<title>vmx_sync_pir_to_irr (76,995 samples, 1.01%)</title><rect x="231.3" y="69" width="11.9" height="15.0" fill="rgb(246,222,17)" rx="2" ry="2" />
<text  x="234.28" y="79.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (241,634 samples, 3.17%)</title><rect x="462.8" y="101" width="37.4" height="15.0" fill="rgb(244,192,25)" rx="2" ry="2" />
<text  x="465.81" y="111.5" >__p..</text>
</g>
<g >
<title>__kvm_set_msr (241,634 samples, 3.17%)</title><rect x="761.8" y="117" width="37.4" height="15.0" fill="rgb(233,23,5)" rx="2" ry="2" />
<text  x="764.82" y="127.5" >__k..</text>
</g>
<g >
<title>kvm_cpu_has_extint (175,288 samples, 2.30%)</title><rect x="243.2" y="85" width="27.1" height="15.0" fill="rgb(222,40,0)" rx="2" ry="2" />
<text  x="246.20" y="95.5" >k..</text>
</g>
<g >
<title>vmx_skip_emulated_instruction (87,644 samples, 1.15%)</title><rect x="748.3" y="117" width="13.5" height="15.0" fill="rgb(246,103,11)" rx="2" ry="2" />
<text  x="751.26" y="127.5" ></text>
</g>
<g >
<title>kvm_check_and_inject_events (329,278 samples, 4.32%)</title><rect x="624.3" y="165" width="50.9" height="15.0" fill="rgb(248,79,28)" rx="2" ry="2" />
<text  x="627.29" y="175.5" >kvm_c..</text>
</g>
<g >
<title>kvm_inject_apic_timer_irqs (318,629 samples, 4.18%)</title><rect x="47.4" y="165" width="49.3" height="15.0" fill="rgb(249,80,10)" rx="2" ry="2" />
<text  x="50.39" y="175.5" >kvm_..</text>
</g>
<g >
<title>vmx_set_msr (241,634 samples, 3.17%)</title><rect x="761.8" y="101" width="37.4" height="15.0" fill="rgb(233,7,39)" rx="2" ry="2" />
<text  x="764.82" y="111.5" >vmx..</text>
</g>
<g >
<title>fc_vcpu (7,625,272 samples, 100.00%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(213,228,24)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >fc_vcpu</text>
</g>
<g >
<title>vmx_sched_in (76,995 samples, 1.01%)</title><rect x="413.5" y="85" width="11.9" height="15.0" fill="rgb(240,110,29)" rx="2" ry="2" />
<text  x="416.50" y="95.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (87,644 samples, 1.15%)</title><rect x="297.4" y="37" width="13.6" height="15.0" fill="rgb(251,94,20)" rx="2" ry="2" />
<text  x="300.45" y="47.5" ></text>
</g>
<g >
<title>__vmx_vcpu_run (339,927 samples, 4.46%)</title><rect x="975.9" y="133" width="52.6" height="15.0" fill="rgb(208,194,25)" rx="2" ry="2" />
<text  x="978.91" y="143.5" >__vmx..</text>
</g>
<g >
<title>vmx_get_rflags (76,995 samples, 1.01%)</title><rect x="812.8" y="117" width="11.9" height="15.0" fill="rgb(205,60,47)" rx="2" ry="2" />
<text  x="815.78" y="127.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (76,995 samples, 1.01%)</title><rect x="96.7" y="117" width="11.9" height="15.0" fill="rgb(234,166,9)" rx="2" ry="2" />
<text  x="99.70" y="127.5" ></text>
</g>
<g >
<title>perf_pmu_nop_void (164,639 samples, 2.16%)</title><rect x="474.7" y="69" width="25.5" height="15.0" fill="rgb(254,103,34)" rx="2" ry="2" />
<text  x="477.72" y="79.5" >p..</text>
</g>
<g >
<title>schedule (1,804,132 samples, 23.66%)</title><rect x="283.9" y="149" width="279.2" height="15.0" fill="rgb(215,95,9)" rx="2" ry="2" />
<text  x="286.89" y="159.5" >schedule</text>
</g>
<g >
<title>vmx_deliver_posted_interrupt (153,990 samples, 2.02%)</title><rect x="72.9" y="101" width="23.8" height="15.0" fill="rgb(216,223,5)" rx="2" ry="2" />
<text  x="75.87" y="111.5" >v..</text>
</g>
<g >
<title>rb_insert_color (76,995 samples, 1.01%)</title><rect x="96.7" y="85" width="11.9" height="15.0" fill="rgb(233,123,45)" rx="2" ry="2" />
<text  x="99.70" y="95.5" ></text>
</g>
<g >
<title>kvm_cpu_has_injectable_intr (87,644 samples, 1.15%)</title><rect x="661.7" y="149" width="13.5" height="15.0" fill="rgb(218,223,37)" rx="2" ry="2" />
<text  x="664.69" y="159.5" ></text>
</g>
<g >
<title>dequeue_entity (339,927 samples, 4.46%)</title><rect x="283.9" y="85" width="52.6" height="15.0" fill="rgb(206,166,10)" rx="2" ry="2" />
<text  x="286.89" y="95.5" >deque..</text>
</g>
<g >
<title>kvm_find_user_return_msr (76,995 samples, 1.01%)</title><rect x="761.8" y="85" width="11.9" height="15.0" fill="rgb(242,110,35)" rx="2" ry="2" />
<text  x="764.82" y="95.5" ></text>
</g>
<g >
<title>put_prev_task_fair (87,644 samples, 1.15%)</title><rect x="549.5" y="117" width="13.6" height="15.0" fill="rgb(225,98,33)" rx="2" ry="2" />
<text  x="552.51" y="127.5" ></text>
</g>
<g >
<title>vmx_set_msr (87,644 samples, 1.15%)</title><rect x="824.7" y="117" width="13.6" height="15.0" fill="rgb(233,7,39)" rx="2" ry="2" />
<text  x="827.69" y="127.5" ></text>
</g>
<g >
<title>kvm_pmu_trigger_event (87,644 samples, 1.15%)</title><rect x="799.2" y="117" width="13.6" height="15.0" fill="rgb(247,140,39)" rx="2" ry="2" />
<text  x="802.22" y="127.5" ></text>
</g>
<g >
<title>vmx_deliver_interrupt (153,990 samples, 2.02%)</title><rect x="72.9" y="117" width="23.8" height="15.0" fill="rgb(237,126,25)" rx="2" ry="2" />
<text  x="75.87" y="127.5" >v..</text>
</g>
<g >
<title>update_cr8_intercept (87,644 samples, 1.15%)</title><rect x="575.0" y="181" width="13.5" height="15.0" fill="rgb(222,143,23)" rx="2" ry="2" />
<text  x="577.99" y="191.5" ></text>
</g>
<g >
<title>kvm_emulate_wrmsr (493,917 samples, 6.48%)</title><rect x="761.8" y="133" width="76.5" height="15.0" fill="rgb(230,117,14)" rx="2" ry="2" />
<text  x="764.82" y="143.5" >kvm_emul..</text>
</g>
<g >
<title>ioctl (7,625,272 samples, 100.00%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(228,211,1)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >ioctl</text>
</g>
<g >
<title>__perf_event_task_sched_in (80,670 samples, 1.06%)</title><rect x="336.5" y="101" width="12.5" height="15.0" fill="rgb(245,10,24)" rx="2" ry="2" />
<text  x="339.49" y="111.5" ></text>
</g>
<g >
<title>vmx_handle_exit (153,990 samples, 2.02%)</title><rect x="1028.5" y="181" width="23.8" height="15.0" fill="rgb(241,220,35)" rx="2" ry="2" />
<text  x="1031.52" y="191.5" >v..</text>
</g>
<g >
<title>native_write_msr (230,173 samples, 3.02%)</title><rect x="687.2" y="165" width="35.6" height="15.0" fill="rgb(251,209,54)" rx="2" ry="2" />
<text  x="690.16" y="175.5" >nat..</text>
</g>
<g >
<title>vmx_prepare_switch_to_guest (76,995 samples, 1.01%)</title><rect x="850.2" y="165" width="11.9" height="15.0" fill="rgb(232,70,5)" rx="2" ry="2" />
<text  x="853.17" y="175.5" ></text>
</g>
<g >
<title>vmx_sched_in (164,639 samples, 2.16%)</title><rect x="362.5" y="69" width="25.5" height="15.0" fill="rgb(240,110,29)" rx="2" ry="2" />
<text  x="365.55" y="79.5" >v..</text>
</g>
<g >
<title>dequeue_task_fair (339,927 samples, 4.46%)</title><rect x="283.9" y="101" width="52.6" height="15.0" fill="rgb(236,102,30)" rx="2" ry="2" />
<text  x="286.89" y="111.5" >deque..</text>
</g>
<g >
<title>finish_rcuwait (76,995 samples, 1.01%)</title><rect x="178.7" y="165" width="11.9" height="15.0" fill="rgb(228,41,45)" rx="2" ry="2" />
<text  x="181.68" y="175.5" ></text>
</g>
<g >
<title>psi_group_change (318,629 samples, 4.18%)</title><rect x="500.2" y="101" width="49.3" height="15.0" fill="rgb(212,34,15)" rx="2" ry="2" />
<text  x="503.20" y="111.5" >psi_..</text>
</g>
<g >
<title>__msecs_to_jiffies (164,639 samples, 2.16%)</title><rect x="425.4" y="85" width="25.5" height="15.0" fill="rgb(232,109,2)" rx="2" ry="2" />
<text  x="428.42" y="95.5" >_..</text>
</g>
<g >
<title>kvm_arch_vcpu_runnable (252,283 samples, 3.31%)</title><rect x="231.3" y="133" width="39.0" height="15.0" fill="rgb(214,161,20)" rx="2" ry="2" />
<text  x="234.28" y="143.5" >kvm..</text>
</g>
<g >
<title>kvm_arch_vcpu_load (76,995 samples, 1.01%)</title><rect x="350.6" y="101" width="11.9" height="15.0" fill="rgb(227,15,24)" rx="2" ry="2" />
<text  x="353.63" y="111.5" ></text>
</g>
<g >
<title>__update_load_avg_se (76,995 samples, 1.01%)</title><rect x="324.6" y="53" width="11.9" height="15.0" fill="rgb(211,8,9)" rx="2" ry="2" />
<text  x="327.57" y="63.5" ></text>
</g>
<g >
<title>vcpu_enter_guest (2,843,099 samples, 37.29%)</title><rect x="588.5" y="181" width="440.0" height="15.0" fill="rgb(230,139,3)" rx="2" ry="2" />
<text  x="591.55" y="191.5" >vcpu_enter_guest</text>
</g>
<g >
<title>kvm_set_msr_common (164,639 samples, 2.16%)</title><rect x="773.7" y="85" width="25.5" height="15.0" fill="rgb(245,203,7)" rx="2" ry="2" />
<text  x="776.74" y="95.5" >k..</text>
</g>
<g >
<title>add_atomic_switch_msr.constprop.0 (76,995 samples, 1.01%)</title><rect x="612.4" y="165" width="11.9" height="15.0" fill="rgb(226,142,36)" rx="2" ry="2" />
<text  x="615.38" y="175.5" ></text>
</g>
<g >
<title>__vmx_complete_interrupts (76,995 samples, 1.01%)</title><rect x="600.5" y="165" width="11.9" height="15.0" fill="rgb(239,68,20)" rx="2" ry="2" />
<text  x="603.46" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,735,731 samples, 88.33%)</title><rect x="10.0" y="261" width="1042.3" height="15.0" fill="rgb(250,28,43)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >do_syscall_64</text>
</g>
<g >
<title>kvm_msr_allowed (76,995 samples, 1.01%)</title><rect x="838.3" y="133" width="11.9" height="15.0" fill="rgb(253,18,30)" rx="2" ry="2" />
<text  x="841.26" y="143.5" ></text>
</g>
<g >
<title>__vmx_handle_exit (746,200 samples, 9.79%)</title><rect x="734.7" y="149" width="115.5" height="15.0" fill="rgb(246,63,6)" rx="2" ry="2" />
<text  x="737.70" y="159.5" >__vmx_handle_e..</text>
</g>
<g >
<title>start_sw_tscdeadline (76,995 samples, 1.01%)</title><rect x="96.7" y="149" width="11.9" height="15.0" fill="rgb(218,38,38)" rx="2" ry="2" />
<text  x="99.70" y="159.5" ></text>
</g>
<g >
<title>__kvm_set_msr (87,644 samples, 1.15%)</title><rect x="734.7" y="133" width="13.6" height="15.0" fill="rgb(233,23,5)" rx="2" ry="2" />
<text  x="737.70" y="143.5" ></text>
</g>
<g >
<title>kvm_vcpu_block (2,406,991 samples, 31.57%)</title><rect x="190.6" y="165" width="372.5" height="15.0" fill="rgb(233,145,44)" rx="2" ry="2" />
<text  x="193.59" y="175.5" >kvm_vcpu_block</text>
</g>
<g >
<title>kvm_lapic_switch_to_sw_timer (76,995 samples, 1.01%)</title><rect x="96.7" y="181" width="11.9" height="15.0" fill="rgb(225,31,23)" rx="2" ry="2" />
<text  x="99.70" y="191.5" ></text>
</g>
<g >
<title>update_load_avg (164,639 samples, 2.16%)</title><rect x="311.0" y="69" width="25.5" height="15.0" fill="rgb(239,57,43)" rx="2" ry="2" />
<text  x="314.01" y="79.5" >u..</text>
</g>
<g >
<title>kvm_inject_pending_timer_irqs (318,629 samples, 4.18%)</title><rect x="47.4" y="181" width="49.3" height="15.0" fill="rgb(229,138,35)" rx="2" ry="2" />
<text  x="50.39" y="191.5" >kvm_..</text>
</g>
<g >
<title>kvm_skip_emulated_instruction (76,995 samples, 1.01%)</title><rect x="938.5" y="133" width="11.9" height="15.0" fill="rgb(232,180,53)" rx="2" ry="2" />
<text  x="941.52" y="143.5" ></text>
</g>
<g >
<title>vmx_handle_exit (746,200 samples, 9.79%)</title><rect x="734.7" y="165" width="115.5" height="15.0" fill="rgb(241,220,35)" rx="2" ry="2" />
<text  x="737.70" y="175.5" >vmx_handle_exit</text>
</g>
<g >
<title>__x64_sys_ioctl (6,735,731 samples, 88.33%)</title><rect x="10.0" y="245" width="1042.3" height="15.0" fill="rgb(251,187,35)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >__x64_sys_ioctl</text>
</g>
<g >
<title>prepare_task_switch (241,634 samples, 3.17%)</title><rect x="462.8" y="117" width="37.4" height="15.0" fill="rgb(253,227,51)" rx="2" ry="2" />
<text  x="465.81" y="127.5" >pre..</text>
</g>
<g >
<title>pick_next_task_fair (164,639 samples, 2.16%)</title><rect x="425.4" y="101" width="25.5" height="15.0" fill="rgb(248,145,46)" rx="2" ry="2" />
<text  x="428.42" y="111.5" >p..</text>
</g>
<g >
<title>start_sw_timer (76,995 samples, 1.01%)</title><rect x="96.7" y="165" width="11.9" height="15.0" fill="rgb(222,222,5)" rx="2" ry="2" />
<text  x="99.70" y="175.5" ></text>
</g>
<g >
<title>kvm_apic_has_interrupt (87,644 samples, 1.15%)</title><rect x="661.7" y="133" width="13.5" height="15.0" fill="rgb(237,205,36)" rx="2" ry="2" />
<text  x="664.69" y="143.5" ></text>
</g>
<g >
<title>dequeue_task (339,927 samples, 4.46%)</title><rect x="283.9" y="117" width="52.6" height="15.0" fill="rgb(219,173,33)" rx="2" ry="2" />
<text  x="286.89" y="127.5" >deque..</text>
</g>
<g >
<title>update_curr (175,288 samples, 2.30%)</title><rect x="283.9" y="69" width="27.1" height="15.0" fill="rgb(218,213,31)" rx="2" ry="2" />
<text  x="286.89" y="79.5" >u..</text>
</g>
<g >
<title>perf_event_context_sched_out (164,639 samples, 2.16%)</title><rect x="474.7" y="85" width="25.5" height="15.0" fill="rgb(249,47,1)" rx="2" ry="2" />
<text  x="477.72" y="95.5" >p..</text>
</g>
<g >
<title>psi_task_switch (318,629 samples, 4.18%)</title><rect x="500.2" y="117" width="49.3" height="15.0" fill="rgb(245,76,41)" rx="2" ry="2" />
<text  x="503.20" y="127.5" >psi_..</text>
</g>
<g >
<title>vmx_vcpu_enter_exit (427,571 samples, 5.61%)</title><rect x="962.3" y="149" width="66.2" height="15.0" fill="rgb(231,101,28)" rx="2" ry="2" />
<text  x="965.35" y="159.5" >vmx_vcp..</text>
</g>
<g >
<title>kvm_vcpu_has_events (87,644 samples, 1.15%)</title><rect x="270.3" y="133" width="13.6" height="15.0" fill="rgb(220,203,50)" rx="2" ry="2" />
<text  x="273.32" y="143.5" ></text>
</g>
<g >
<title>restore_fpregs_from_fpstate (76,995 samples, 1.01%)</title><rect x="722.8" y="165" width="11.9" height="15.0" fill="rgb(219,130,50)" rx="2" ry="2" />
<text  x="725.78" y="175.5" ></text>
</g>
<g >
<title>kvm_arch_vcpu_ioctl_run (6,735,731 samples, 88.33%)</title><rect x="10.0" y="213" width="1042.3" height="15.0" fill="rgb(237,200,11)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >kvm_arch_vcpu_ioctl_run</text>
</g>
<g >
<title>kvm_cpu_has_interrupt (252,283 samples, 3.31%)</title><rect x="231.3" y="101" width="39.0" height="15.0" fill="rgb(222,21,35)" rx="2" ry="2" />
<text  x="234.28" y="111.5" >kvm..</text>
</g>
<g >
<title>kvm_emulate_halt (87,644 samples, 1.15%)</title><rect x="748.3" y="133" width="13.5" height="15.0" fill="rgb(230,2,19)" rx="2" ry="2" />
<text  x="751.26" y="143.5" ></text>
</g>
<g >
<title>apic_set_eoi (76,995 samples, 1.01%)</title><rect x="787.3" y="37" width="11.9" height="15.0" fill="rgb(228,178,27)" rx="2" ry="2" />
<text  x="790.30" y="47.5" ></text>
</g>
<g >
<title>put_prev_entity (76,995 samples, 1.01%)</title><rect x="450.9" y="101" width="11.9" height="15.0" fill="rgb(219,56,41)" rx="2" ry="2" />
<text  x="453.89" y="111.5" ></text>
</g>
<g >
<title>kvm_load_host_xsave_state.part.0 (76,995 samples, 1.01%)</title><rect x="950.4" y="133" width="11.9" height="15.0" fill="rgb(206,75,12)" rx="2" ry="2" />
<text  x="953.43" y="143.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (87,644 samples, 1.15%)</title><rect x="297.4" y="53" width="13.6" height="15.0" fill="rgb(246,221,4)" rx="2" ry="2" />
<text  x="300.45" y="63.5" ></text>
</g>
</g>
</svg>
